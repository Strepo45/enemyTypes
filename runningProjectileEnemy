// place in OnStart //
let runningPresent = false




//place wherever

scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile5`, function (sprite, location) {
    for (let value of tiles.getTilesByType(assets.tile`myTile5`)) {
        for (let value2 of tiles.getTilesByType(assets.tile`myTile6`)) {
            runProjectileEnemy = sprites.create(img`
                ........................
                ........................
                ........................
                ........................
                ..........ffff..........
                ........ff1111ff........
                .......fb111111bf.......
                .......f11111111f.......
                ......fd11111111df......
                ......fd11111111df......
                ......fddd1111dddf......
                ......fbdbfddfbdbf......
                ......fcdcf11fcdcf......
                .......fb111111bf.......
                ......fffcdb1bdffff.....
                ....fc111cbfbfc111cf....
                ....f1b1b1ffff1b1b1f....
                ....fbfbffffffbfbfbf....
                .........ffffff.........
                ...........fff..........
                ........................
                ........................
                ........................
                ........................
                `, SpriteKind.regularEnemy)
            runProjectileEnemy.follow(mySprite, 45)
            runProjectileEnemy.ay = 3000
            tiles.placeOnTile(runProjectileEnemy, value2)
            tiles.setTileAt(value2, assets.tile`transparency16`)
            runningPresent = true
        }
        tiles.setTileAt(value, assets.tile`transparency16`)
    }
})



//ADD PROJECTILE FIRING//

//place wherever// 
//mySprite.x is supposed to represent player's x, change if player's sprite utilizes different name//
forever(function () {
 if (runningPresent == true)
 {
    if (mySprite.x < runProjectileEnemy.x) {
        projectile = sprites.createProjectileFromSprite(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . 3 3 3 3 3 3 3 . . . . 
            . . . . 3 3 3 3 3 3 3 3 3 . . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . . 3 3 3 3 3 3 3 3 3 . . . 
            . . . . . 3 3 3 3 3 3 3 . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, runProjectileEnemy, -50, 0)
            runProjectileEnemy.setKind(SpriteKind.regularProjectile)
    } else {
        projectile = sprites.createProjectileFromSprite(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . 3 3 3 3 3 3 3 . . . . 
            . . . . 3 3 3 3 3 3 3 3 3 . . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . 3 3 3 3 3 3 3 3 3 3 3 . . 
            . . . . 3 3 3 3 3 3 3 3 3 . . . 
            . . . . . 3 3 3 3 3 3 3 . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, runProjectileEnemy, 50, 0)
            runProjectileEnemy.setKind(SpriteKind.regularProjectile)
    }
    
    pause(3500)
    }
})

